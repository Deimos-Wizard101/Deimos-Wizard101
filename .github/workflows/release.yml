name: Release Deimos

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  
  # Optional: Allow manual release creation
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: windows-latest
    
    permissions:
      contents: write  # Required to create releases
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --force-reinstall
        pip install pyinstaller
    
    - name: Get version from tag
      id: version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Building version: ${VERSION}"
    
    - name: Update version in code (optional)
      shell: bash
      run: |
        # Update the tool_version variable in Deimos.py
        sed -i "s/tool_version: str = '[^']*'/tool_version: str = '${{ steps.version.outputs.VERSION_NUMBER }}'/" Deimos.py
        echo "Updated version in Deimos.py to ${{ steps.version.outputs.VERSION_NUMBER }}"
    
    - name: Build with PyInstaller
      run: |
        pyinstaller -F -w --clean -i Deimos-logo.ico --version-file version_info.txt Deimos.py --noupx --optimize 2 --manifest "app.manifest"
        echo "Build completed successfully"
        dir dist
    
    - name: Verify required files exist
      shell: bash
      run: |
        echo "Checking for required files..."
        if [ ! -f "dist/Deimos.exe" ]; then
          echo "ERROR: Deimos.exe not found in dist folder"
          exit 1
        fi
        if [ ! -f "Deimos-config.ini" ]; then
          echo "ERROR: Deimos-config.ini not found"
          exit 1
        fi
        if [ ! -f "LICENSE" ]; then
          echo "ERROR: LICENSE file not found"
          exit 1
        fi
        echo "All required files found ‚úì"
        echo "Deimos.exe size: $(stat -c%s dist/Deimos.exe) bytes"
    
    - name: Create release package
      shell: bash
      run: |
        echo "Creating release package..."
        mkdir -p release
        
        # Copy files to release directory
        cp dist/Deimos.exe release/
        cp Deimos-config.ini release/
        cp LICENSE release/
        
        # Create zip file with version in name
        cd release
        zip -r "../Deimos-${{ steps.version.outputs.VERSION }}.zip" .
        cd ..
        
        echo "Release package created: Deimos-${{ steps.version.outputs.VERSION }}.zip"
        echo "Package contents:"
        unzip -l "Deimos-${{ steps.version.outputs.VERSION }}.zip"
    
    - name: Generate changelog
      id: changelog
      shell: bash
      run: |
        echo "Generating changelog..."
        
        # Get the last tag (excluding current)
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$LAST_TAG" ]; then
          echo "No previous tag found, generating changelog from recent commits"
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges | head -20)
        else
          echo "Generating changelog since last tag: $LAST_TAG"
          CHANGELOG=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
        fi
        
        # Handle empty changelog
        if [ -z "$CHANGELOG" ]; then
          CHANGELOG="- Initial release"
        fi
        
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "LAST_TAG=$LAST_TAG" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Deimos ${{ steps.version.outputs.VERSION }}
        body: |
          ## üöÄ What's New in Deimos ${{ steps.version.outputs.VERSION }}
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## üì¶ Installation Instructions
          
          1. **Download** the `Deimos-${{ steps.version.outputs.VERSION }}.zip` file from the assets below
          2. **Extract** the contents to your desired location
          3. **Run** `Deimos.exe` to start the application
          4. **Configure** settings in `Deimos-config.ini` if needed
          
          ## üìã Package Contents
          
          - `Deimos.exe` - Main Deimos application executable
          - `Deimos-config.ini` - Configuration file with all settings
          - `LICENSE` - License information and terms of use
          
          ## ‚öôÔ∏è System Requirements
          
          - Windows 10/11 (64-bit)
          - Wizard101 client installed
          - .NET Framework (usually pre-installed)
          
          ## üõ†Ô∏è Troubleshooting
          
          If you encounter any issues:
          1. Make sure Wizard101 is properly installed
          2. Run as Administrator if needed
          3. Check that antivirus isn't blocking the executable
          4. Ensure all files from the zip are in the same folder
          
          ---
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.LAST_TAG }}...${{ steps.version.outputs.VERSION }}
        files: |
          Deimos-${{ steps.version.outputs.VERSION }}.zip
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Release Summary
      shell: bash
      run: |
        echo "üéâ Release ${{ steps.version.outputs.VERSION }} completed successfully!"
        echo "üì¶ Package: Deimos-${{ steps.version.outputs.VERSION }}.zip"
        echo "üîó Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}"
        echo "üìÅ Package size: $(stat -c%s "Deimos-${{ steps.version.outputs.VERSION }}.zip") bytes"
